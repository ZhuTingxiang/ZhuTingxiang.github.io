<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Star</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http:starllap.space/"/>
  <updated>2017-06-26T03:21:30.000Z</updated>
  <id>http:starllap.space/</id>
  
  <author>
    <name>Star</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>LeetCode 120.Triangle</title>
    <link href="http:starllap.space/2017/06/26/LeetCode-120-Triangle/"/>
    <id>http:starllap.space/2017/06/26/LeetCode-120-Triangle/</id>
    <published>2017-06-26T03:14:41.000Z</published>
    <updated>2017-06-26T03:21:30.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a triangle, find the minimum path sum from top to bottom. Each step you may move to adjacent numbers on the row below.</p>
<p>For example, given the following triangle
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">[</div><div class="line">     [2],</div><div class="line">    [3,4],</div><div class="line">   [6,5,7],</div><div class="line">  [4,1,8,3]</div><div class="line">]</div></pre></td></tr></table></figure></p>
<p>The minimum path sum from top to bottom is 11 (i.e., 2 + 3 + 5 + 1 = 11).</p>
<p>Note:
Bonus point if you are able to do this using only O(n) extra space, where n is the total number of rows in the triangle.</p>
<h3 id="explanation">Explanation</h3>
<p>动态规划的基本题。主要就是要给每个pos都有一个找到最小值，逐层找到最后一个。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int minimumTotal(List&lt;List&lt;Integer&gt;&gt; triangle) &#123;</div><div class="line">        if (triangle == null || triangle.size() == 0) return -1;</div><div class="line">        if (triangle.get(0) == null || triangle.get(0).size() == 0) return -1;</div><div class="line">        int n = triangle.size();</div><div class="line">        int[][] f = new int[n][n];</div><div class="line">        f[0][0] = triangle.get(0).get(0);</div><div class="line"></div><div class="line">        for (int i=1; i&lt;n; i++) &#123;</div><div class="line">            f[i][0] = f[i-1][0] + triangle.get(i).get(0);</div><div class="line">            f[i][i] = f[i-1][i-1] + triangle.get(i).get(i);</div><div class="line"></div><div class="line">        &#125;</div><div class="line"></div><div class="line">        for (int i=1; i&lt;n; i++) &#123;</div><div class="line">            for(int j=1; j&lt;i; j++) &#123;</div><div class="line">                f[i][j] = Math.min(f[i-1][j-1], f[i-1][j]) + triangle.get(i).get(j);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        int best = f[n-1][0];</div><div class="line">        for (int i=1; i&lt;n; i++) &#123;</div><div class="line">            best = Math.min(best, f[n-1][i]);</div><div class="line">        &#125;</div><div class="line">        return best;</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a triangle, find the minimum path sum from top to
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>LeetCode 279.Perfect Squares</title>
    <link href="http:starllap.space/2017/06/26/LeetCode-279-Perfect-Squares/"/>
    <id>http:starllap.space/2017/06/26/LeetCode-279-Perfect-Squares/</id>
    <published>2017-06-26T02:56:08.000Z</published>
    <updated>2017-06-26T15:00:04.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a positive integer n, find the least number of perfect square numbers (for example, 1, 4, 9, 16, ...) which sum to n.</p>
<p>For example, given n = 12, return 3 because 12 = 4 + 4 + 4; given n = 13, return 2 because 13 = 4 + 9.</p>
<h3 id="explanation">Explanation</h3>
<p>动态规划方法就是把一次得到最小值。然后把一个数i拆分成 i-j<em>j和j</em>j。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int numSquares(int n) &#123;</div><div class="line">        // DP solution:</div><div class="line">        int[] nums = new int[n+1];</div><div class="line">        if (n == 0) return 0;</div><div class="line">        Arrays.fill(nums, Integer.MAX_VALUE);</div><div class="line">        nums[0] = 0;</div><div class="line">        for (int i=1; i&lt;=n; i++) &#123;</div><div class="line">            int min = Integer.MAX_VALUE;</div><div class="line">            int j = 1;</div><div class="line">            while (i - j*j &gt; 0) &#123;</div><div class="line">                min = Math.min(min, nums[i-j*j]+1);</div><div class="line">                j++;</div><div class="line">            &#125;</div><div class="line">            nums[i] = min;</div><div class="line">        &#125;</div><div class="line">        return nums[n];</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a positive integer n, find the least number of pe
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="BFS" scheme="http:starllap.space/tags/BFS/"/>
    
      <category term="Dynamic Programming" scheme="http:starllap.space/tags/Dynamic-Programming/"/>
    
      <category term="Math" scheme="http:starllap.space/tags/Math/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 23. Merge k Sorted Lists</title>
    <link href="http:starllap.space/2017/06/25/LeetCode-23-Merge-k-Sorted-Lists/"/>
    <id>http:starllap.space/2017/06/25/LeetCode-23-Merge-k-Sorted-Lists/</id>
    <published>2017-06-25T08:10:33.000Z</published>
    <updated>2017-06-25T20:23:24.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Merge k sorted linked lists and return it as one sorted list. Analyze and describe its complexity.</p>
<h3 id="explanation">Explanation</h3>
<p>见code。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for singly-linked list.</div><div class="line"> * public class ListNode &#123;</div><div class="line"> *     int val;</div><div class="line"> *     ListNode next;</div><div class="line"> *     ListNode(int x) &#123; val = x; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">public class Solution &#123;</div><div class="line">    // Solution 1: heap</div><div class="line">    // private Comparator&lt;ListNode&gt; ListNodeComparator = new Comparator&lt;ListNode&gt;()&#123;</div><div class="line">    //     public int compare(ListNode left, ListNode right)&#123;</div><div class="line">    //         return left.val - right.val;</div><div class="line">    //     &#125;</div><div class="line">    // &#125;;</div><div class="line"></div><div class="line">    // public ListNode mergeKLists(ListNode[] lists) &#123;</div><div class="line">    //     if (lists == null || lists.length == 0 ) return null;</div><div class="line">    //     Queue&lt;ListNode&gt; heap = new PriorityQueue&lt;ListNode&gt;(lists.length, ListNodeComparator);</div><div class="line">    //     for (int i=0; i&lt;lists.length; i++) &#123;</div><div class="line">    //         if (lists[i] != null) &#123;</div><div class="line">    //             heap.add(lists.get(i));</div><div class="line">    //         &#125;</div><div class="line">    //     &#125;</div><div class="line">    //     ListNode dummy = new ListNode(0);</div><div class="line">    //     ListNode tail = dummy;</div><div class="line">    //     while(!heap.isEmpty()) &#123;</div><div class="line">    //         ListNode head = heap.poll();</div><div class="line">    //         tail.next = head;</div><div class="line">    //         tail = head;</div><div class="line">    //         if (head.next != null) &#123;</div><div class="line">    //             heap.add(head.next);</div><div class="line">    //         &#125;</div><div class="line">    //     &#125;</div><div class="line">    //     return dummy.next;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">    // &#125;</div><div class="line">    // Solution 2: merge two by two</div><div class="line">    public ListNode mergeKLists(ListNode[] lists) &#123;</div><div class="line">        if (lists == null || lists.length == 0) return null;</div><div class="line">        return partition(lists, 0, lists.length - 1);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public ListNode partition(ListNode[] lists, int start, int end) &#123;</div><div class="line">        if (start == end) return lists[start];</div><div class="line">        if (start &lt; end) &#123;</div><div class="line">            int middle = (start + end) / 2;</div><div class="line">            ListNode n1 = partition(lists, start, middle);</div><div class="line">            ListNode n2 = partition(lists, middle+1, end);</div><div class="line">            return merge(n1, n2);</div><div class="line">        &#125;</div><div class="line">        return null;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public static ListNode merge(ListNode n1, ListNode n2) &#123;</div><div class="line">        if (n1 == null) return n2;</div><div class="line">        if (n2 == null) return n1;</div><div class="line">        if (n1.val &lt; n2.val) &#123;</div><div class="line">            n1.next = merge(n1.next, n2);</div><div class="line">            return n1;</div><div class="line">        &#125; else &#123;</div><div class="line">            n2.next = merge(n1, n2.next);</div><div class="line">            return n2;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Merge k sorted linked lists and return it as one sorted
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Hard" scheme="http:starllap.space/tags/Hard/"/>
    
      <category term="Divide and conquer" scheme="http:starllap.space/tags/Divide-and-conquer/"/>
    
      <category term="Linked List" scheme="http:starllap.space/tags/Linked-List/"/>
    
      <category term="Heap" scheme="http:starllap.space/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 215.Kth Largest Element in an Array</title>
    <link href="http:starllap.space/2017/06/25/LeetCode-215-Kth-Largest-Element-in-an-Array/"/>
    <id>http:starllap.space/2017/06/25/LeetCode-215-Kth-Largest-Element-in-an-Array/</id>
    <published>2017-06-25T04:35:18.000Z</published>
    <updated>2017-06-25T16:39:25.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Find the kth largest element in an unsorted array. Note that it is the kth largest element in the sorted order, not the kth distinct element.</p>
<p>For example,
Given [3,2,1,5,6,4] and k = 2, return 5.</p>
<p>Note:
You may assume k is always valid, 1 ≤ k ≤ array's length.</p>
<h3 id="explanation">Explanation</h3>
<p>常考题。可以有三种方法：a. 直接sort，然后找到第k个。b.用一个heap来存，这种方法遇到最大top kth 也可以做，或者遇到不停更新的数组，需要不停add的情况时，可以用这个来存。会很有效率。c.用quick sort来找partition aray来找。</p>
<p>这三种方法都写在下面了，包括时间空间效率分析。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    // public int findKthLargest(int[] nums, int k) &#123;</div><div class="line">    //     // O(NlgN) time + O(1) memory, but it would be very costing if you keep adding new elements. It&apos;s not efficiency to sort it all the time.</div><div class="line">    //     int n = nums.length;</div><div class="line">    //     Arrays.sort(nums);</div><div class="line">    //     return nums[n-k];</div><div class="line">    // &#125;</div><div class="line"></div><div class="line">    // public int findKthLargest(int[] nums, int k) &#123;</div><div class="line">    //     // O(NlogK) time + O(k) memory</div><div class="line">    //     PriorityQueue&lt;Integer&gt; p = new PriorityQueue&lt;Integer&gt;();</div><div class="line">    //     for (int i=0; i&lt;nums.length; i++) &#123;</div><div class="line">    //         p.add(nums[i]);</div><div class="line">    //         if (p.size() &gt; k) p.poll();</div><div class="line">    //     &#125;</div><div class="line">    //     return p.poll();</div><div class="line"></div><div class="line">    // &#125;</div><div class="line"></div><div class="line"></div><div class="line">    public int findKthLargest(int[] nums, int k) &#123;</div><div class="line">        // O(N) running time + O(1) memeory Quick sort</div><div class="line">        return quickSelect(nums, k-1, 0, nums.length-1);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private int quickSelect(int[] nums, int k, int left, int right) &#123;</div><div class="line">        int pivot = nums[(left+right)/2];</div><div class="line">        int orgl = left, orgr = right;</div><div class="line">        while(left &lt;= right) &#123;</div><div class="line">            while(nums[left] &gt; pivot) &#123;</div><div class="line">                left ++;</div><div class="line">            &#125;</div><div class="line">            while(nums[right] &lt; pivot) &#123;</div><div class="line">                right --;</div><div class="line">            &#125;</div><div class="line">            if (left &lt;= right) &#123;</div><div class="line">                swap(nums, right, left);</div><div class="line">                left ++;</div><div class="line">                right --;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        if(orgl &lt; right &amp;&amp; k &lt;= right) return quickSelect(nums,k, orgl, right);</div><div class="line">        if(left &lt; orgr &amp;&amp; k &gt;= left) return quickSelect(nums, k,left, orgr);</div><div class="line">        return nums[k];</div><div class="line">    &#125;</div><div class="line">    private void swap(int[] nums, int index1, int index2) &#123;</div><div class="line">        int tmp = nums[index1] ;</div><div class="line">        nums[index1] =  nums[index2];</div><div class="line">        nums[index2] =tmp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Find the kth largest element in an unsorted array. Note
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Divide and conquer" scheme="http:starllap.space/tags/Divide-and-conquer/"/>
    
      <category term="Heap" scheme="http:starllap.space/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 146. LRU Cache</title>
    <link href="http:starllap.space/2017/06/25/LeetCode-146-LRU-Cache/"/>
    <id>http:starllap.space/2017/06/25/LeetCode-146-LRU-Cache/</id>
    <published>2017-06-24T21:07:08.000Z</published>
    <updated>2017-06-24T21:09:50.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Design and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: get and put.</p>
<p>get(key) - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.
put(key, value) - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.</p>
<p>Follow up:
Could you do both operations in O(1) time complexity?</p>
<p>Example:</p>
<p>LRUCache cache = new LRUCache( 2 /<em>capacity</em>/);</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">cache.put(1, 1);</div><div class="line">cache.put(2, 2);</div><div class="line">cache.get(1);       // returns 1</div><div class="line">cache.put(3, 3);    // evicts key 2</div><div class="line">cache.get(2);       // returns -1 (not found)</div><div class="line">cache.put(4, 4);    // evicts key 1</div><div class="line">cache.get(1);       // returns -1 (not found)</div><div class="line">cache.get(3);       // returns 3</div><div class="line">cache.get(4);       // returns 4</div></pre></td></tr></table></figure></p>
<h3 id="explanation">Explanation</h3>
<p>这道题用linked hashmap来解决，既存着值，同时每当get和put的操作产生，就算是调用了，所以要调整位置。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line">public class LRUCache &#123;</div><div class="line">    private LinkedHashMap&lt;Integer, Integer&gt; map;</div><div class="line">    private int cap;</div><div class="line"></div><div class="line">    public LRUCache(int capacity) &#123;</div><div class="line">        this.cap = capacity;</div><div class="line">        this.map = new LinkedHashMap&lt;Integer, Integer&gt;(capacity);</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public int get(int key) &#123;</div><div class="line">        if (!map.containsKey(key)) &#123;</div><div class="line">            return -1;</div><div class="line">        &#125;</div><div class="line">        int val = map.get(key);</div><div class="line">        map.remove(key);</div><div class="line">        map.put(key,val);</div><div class="line">        return val;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void put(int key, int value) &#123;</div><div class="line">        if (map.containsKey(key)) &#123;</div><div class="line">            map.remove(key);</div><div class="line">        &#125; else if (map.size() &gt;= cap) &#123;</div><div class="line">            map.remove(map.entrySet().iterator().next().getKey());</div><div class="line">        &#125;</div><div class="line">        map.put(key,value);</div><div class="line"></div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Design and implement a data structure for Least Recentl
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Design" scheme="http:starllap.space/tags/Design/"/>
    
      <category term="Hard" scheme="http:starllap.space/tags/Hard/"/>
    
      <category term="HashMap" scheme="http:starllap.space/tags/HashMap/"/>
    
      <category term="LinkedList" scheme="http:starllap.space/tags/LinkedList/"/>
    
  </entry>
  
  <entry>
    <title>LintCode: Rainbow Sort</title>
    <link href="http:starllap.space/2017/06/23/LintCode-Rainbow-Sort/"/>
    <id>http:starllap.space/2017/06/23/LintCode-Rainbow-Sort/</id>
    <published>2017-06-23T14:01:49.000Z</published>
    <updated>2017-06-24T03:38:07.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given an array of n objects with k different colors (numbered from 1 to k), sort them so that objects of the same color are adjacent, with the colors in the order 1, 2, ... k.</p>
<p>Notice</p>
<p>You are not suppose to use the library's sort function for this problem.</p>
<p>k &lt;= n</p>
<p>Example
Given colors=[3, 2, 2, 1, 4], k=4, your code should sort colors in-place to [1, 2, 2, 3, 4].</p>
<h3 id="explanation">Explanation</h3>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">public void sortColors2(int[] colors, int k) &#123;</div><div class="line">    if (colors == null || colors.length == 0) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line">    rainbowSort(colors, 0, colors.length - 1, 1, k);</div><div class="line">&#125;</div><div class="line"></div><div class="line">public void rainbowSort(int[] colors,</div><div class="line">                        int left,</div><div class="line">                        int right,</div><div class="line">                        int colorFrom,</div><div class="line">                        int colorTo) &#123;</div><div class="line">    if (colorFrom == colorTo) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    if (left &gt;= right) &#123;</div><div class="line">        return;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    int colorMid = (colorFrom + colorTo) / 2;</div><div class="line">    int l = left, r = right;</div><div class="line">    while (l &lt;= r) &#123;</div><div class="line">        while (l &lt;= r &amp;&amp; colors[l] &lt;= colorMid) &#123;</div><div class="line">            l++;</div><div class="line">        &#125;</div><div class="line">        while (l &lt;= r &amp;&amp; colors[r] &gt; colorMid) &#123;</div><div class="line">            r--;</div><div class="line">        &#125;</div><div class="line">        if (l &lt;= r) &#123;</div><div class="line">            int temp = colors[l];</div><div class="line">            colors[l] = colors[r];</div><div class="line">            colors[r] = temp;</div><div class="line"></div><div class="line">            l++;</div><div class="line">            r--;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    rainbowSort(colors, left, r, colorFrom, colorMid);</div><div class="line">    rainbowSort(colors, l, right, colorMid + 1, colorTo);</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given an array of n objects with k different colors (nu
    
    </summary>
    
      <category term="LintCode" scheme="http:starllap.space/categories/LintCode/"/>
    
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Sort" scheme="http:starllap.space/tags/Sort/"/>
    
      <category term="Merge Sort" scheme="http:starllap.space/tags/Merge-Sort/"/>
    
      <category term="LintCode" scheme="http:starllap.space/tags/LintCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 75.Sort Colors</title>
    <link href="http:starllap.space/2017/06/23/LeetCode-75-Sort-Colors/"/>
    <id>http:starllap.space/2017/06/23/LeetCode-75-Sort-Colors/</id>
    <published>2017-06-23T12:21:33.000Z</published>
    <updated>2017-06-24T00:24:04.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given an array with n objects colored red, white or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white and blue.</p>
<p>Here, we will use the integers 0, 1, and 2 to represent the color red, white, and blue respectively.</p>
<p>Note:
You are not suppose to use the library's sort function for this problem.</p>
<h3 id="explanation">Explanation</h3>
<p>这道题，需要一个指针一直在遍历数组。同时，还有left，和right两个指针分别计算0和2。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public void sortColors(int[] nums) &#123;</div><div class="line">        int j = 0, k = nums.length-1;</div><div class="line">        for (int i=0; i &lt;= k; i++) &#123;</div><div class="line">            if (nums[i] == 0)</div><div class="line">                swap(nums, i, j++);</div><div class="line">            else if (nums[i] == 2)</div><div class="line">                swap(nums, i--, k--);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    private void swap(int[] a, int i, int j) &#123;</div><div class="line">        int tmp = a[i];</div><div class="line">        a[i] = a[j];</div><div class="line">        a[j] = tmp;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given an array with n objects colored red, white or blu
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Sort" scheme="http:starllap.space/tags/Sort/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 18. 4Sum</title>
    <link href="http:starllap.space/2017/06/23/LeetCode-18-4Sum/"/>
    <id>http:starllap.space/2017/06/23/LeetCode-18-4Sum/</id>
    <published>2017-06-23T08:46:45.000Z</published>
    <updated>2017-06-23T20:48:36.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given an array S of n integers, are there elements a, b, c, and d in S such that a + b + c + d = target? Find all unique quadruplets in the array which gives the sum of target.</p>
<p>Note: The solution set must not contain duplicate quadruplets.</p>
<p>For example, given array S = [1, 0, -1, 0, -2, 2], and target = 0.</p>
<p>A solution set is:
[
[-1,  0, 0, 1],
[-2, -1, 1, 2],
[-2,  0, 0, 2]
]</p>
<h3 id="explanation">Explanation</h3>
<p>分解成3sum和2sum来做，注意排序以后要跳过重复的值。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public List&lt;List&lt;Integer&gt;&gt; fourSum(int[] nums, int target) &#123;</div><div class="line">        List&lt;List&lt;Integer&gt;&gt; result = new ArrayList&lt;&gt;();</div><div class="line">        if (nums == null || nums.length &lt; 4) return result;</div><div class="line">        Arrays.sort(nums);</div><div class="line">        for(int i=0; i&lt;nums.length-3; i++) &#123;</div><div class="line">            if (i != 0 &amp;&amp; nums[i] == nums[i-1])&#123;</div><div class="line">                continue;</div><div class="line">            &#125;</div><div class="line">            for (int j = i+1; j &lt; nums.length-2; j++) &#123;</div><div class="line">                if (j&gt;i+1 &amp;&amp; nums[j] == nums[j-1]) continue;</div><div class="line">                int low = j+1;</div><div class="line">                int high = nums.length-1;</div><div class="line">                while(low &lt; high) &#123;</div><div class="line">                    int sum = nums[i] + nums[j] + nums[low] + nums[high];</div><div class="line">                    if(sum == target) &#123;</div><div class="line">                        result.add(Arrays.asList(nums[i], nums[j], nums[low], nums[high]));</div><div class="line">                    while(low &lt; high &amp;&amp; nums[low] == nums[low+1]) low++;</div><div class="line">                    while(low &lt; high &amp;&amp; nums[high] == nums[high - 1]) high--;</div><div class="line">                    low ++;</div><div class="line">                    high --;</div><div class="line">                    &#125; else if(sum &lt; target) low++;</div><div class="line">                    else high --;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given an array S of n integers, are there elements a, b
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
      <category term="HashTable" scheme="http:starllap.space/tags/HashTable/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 16. 3Sum Closest</title>
    <link href="http:starllap.space/2017/06/23/LeetCode-16-3Sum-Closest/"/>
    <id>http:starllap.space/2017/06/23/LeetCode-16-3Sum-Closest/</id>
    <published>2017-06-23T08:19:57.000Z</published>
    <updated>2017-06-23T20:21:50.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.</p>
<pre><code>For example, given array S = {-1 2 1 -4}, and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
</code></pre>
<h3 id="explanation">Explanation</h3>
<p>固定一个值，然后用双指针遍历其他的值。找到绝对值之差最小的即可。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public int threeSumClosest(int[] nums, int target) &#123;</div><div class="line">        int diff = Integer.MAX_VALUE;</div><div class="line">        int result = 0;</div><div class="line">        if (nums == null || nums.length &lt; 3) return -1;</div><div class="line">        Arrays.sort(nums);</div><div class="line">        for (int i=0; i&lt;nums.length; i++) &#123;</div><div class="line">            int start = i+1;</div><div class="line">            int end = nums.length - 1;</div><div class="line">            while (start &lt; end) &#123;</div><div class="line">                int sum = nums[i] + nums[start] + nums[end];</div><div class="line">                if (Math.abs(target - sum) &lt; diff) &#123;</div><div class="line">                    diff = Math.abs(target - sum);</div><div class="line">                    result = sum;</div><div class="line">                &#125;</div><div class="line">                if (sum &lt; target) &#123;</div><div class="line">                    start ++;</div><div class="line">                &#125; else&#123;</div><div class="line">                    end --;</div><div class="line"></div><div class="line"></div><div class="line">        &#125;</div><div class="line">        return result;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given an array S of n integers, find three integers in 
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>[LintCode] Closest number in sorted array </title>
    <link href="http:starllap.space/2017/06/22/LintCode-Closest-number-in-sorted-array/"/>
    <id>http:starllap.space/2017/06/22/LintCode-Closest-number-in-sorted-array/</id>
    <published>2017-06-22T09:05:21.000Z</published>
    <updated>2017-06-22T21:21:30.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a target number and an integer array A sorted in ascending order, find the index i in A such that A[i] is closest to the given target.
Return -1 if there is no element in the array.</p>
<h3 id="explanation">Explanation</h3>
<p>被面到了这道题！先排个序，接着二分查找。注意最后选择start还是选择end。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">public void search(int[] array, int k) &#123;</div><div class="line">  Arrays.sort(array);</div><div class="line">  int start = 0;</div><div class="line">  int end = arrays.length;</div><div class="line">  while(start+1 &lt; end) &#123;</div><div class="line">    int mid = start + (end - start)/2;</div><div class="line">    if (array[mid] == k) return mid;</div><div class="line">    if (array[mid] &gt; k) &#123;</div><div class="line">      start = mid;</div><div class="line">    &#125; else &#123;</div><div class="line">      end = mid;</div><div class="line">    &#125;</div><div class="line">  &#125;</div><div class="line">  if (k &lt;= array[start]) return start;</div><div class="line">  if (k &gt;= array[end]) return end;</div><div class="line">  if (k - array[start] &gt; array[end] - k) &#123;</div><div class="line">    return end;</div><div class="line">  &#125; else &#123;</div><div class="line">    return start;</div><div class="line">  &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a target number and an integer array A sorted in 
    
    </summary>
    
      <category term="LintCode" scheme="http:starllap.space/categories/LintCode/"/>
    
    
      <category term="Binary Search" scheme="http:starllap.space/tags/Binary-Search/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="LintCode" scheme="http:starllap.space/tags/LintCode/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 56.Merge Intervals</title>
    <link href="http:starllap.space/2017/06/22/LeetCode-56-Merge-Intervals/"/>
    <id>http:starllap.space/2017/06/22/LeetCode-56-Merge-Intervals/</id>
    <published>2017-06-22T04:18:31.000Z</published>
    <updated>2017-06-22T16:21:41.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a collection of intervals, merge all overlapping intervals.</p>
<p>For example,
Given [1,3],[2,6],[8,10],[15,18],
return [1,6],[8,10],[15,18].</p>
<h3 id="explanation">Explanation</h3>
<p>主要思想是按照start来排序，然后比较end。这里可以用collections来sort，也可以用priorityqueue来存，如果用heap的话就多了一些空间。</p>
<h3 id="code">Code</h3>
<p>Solution 1: Heap
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div></pre></td><td class="code"><pre><div class="line">/**</div><div class="line"> * Definition for an interval.</div><div class="line"> * public class Interval &#123;</div><div class="line"> *     int start;</div><div class="line"> *     int end;</div><div class="line"> *     Interval() &#123; start = 0; end = 0; &#125;</div><div class="line"> *     Interval(int s, int e) &#123; start = s; end = e; &#125;</div><div class="line"> * &#125;</div><div class="line"> */</div><div class="line">public class Solution &#123;</div><div class="line">    public List&lt;Interval&gt; merge(List&lt;Interval&gt; intervals) &#123;</div><div class="line">        List&lt;Interval&gt; result = new ArrayList&lt;&gt;();</div><div class="line">        if (intervals == null || intervals.size() == 0) return result;</div><div class="line">        PriorityQueue&lt;Interval&gt; heap = new PriorityQueue&lt;&gt;((a,b)-&gt;(a.start - b.start));</div><div class="line">        for(Interval interval : intervals) &#123;</div><div class="line">            heap.add(interval);</div><div class="line">        &#125;</div><div class="line">        Interval first = heap.peek();</div><div class="line">        int start = first.start;</div><div class="line">        int end = first.end;</div><div class="line">        while(!heap.isEmpty()) &#123;</div><div class="line">            Interval curr = heap.poll();</div><div class="line">            int currStart = curr.start;</div><div class="line">            int currEnd = curr.end;</div><div class="line">            if (end &gt;= currStart)&#123;</div><div class="line">                if(end &lt;= currEnd) &#123;</div><div class="line">                    end = currEnd;</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                result.add(new Interval(start, end));</div><div class="line">                start = currStart;</div><div class="line">                end = currEnd;</div><div class="line"></div><div class="line">            &#125;</div><div class="line"></div><div class="line">        &#125;</div><div class="line">        result.add(new Interval(start, end));</div><div class="line">        return result;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Solution 2: Collections Sort
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public List&lt;Interval&gt; merge(List&lt;Interval&gt; intervals) &#123;</div><div class="line">        List&lt;Interval&gt;  list = new ArrayList&lt;&gt;();</div><div class="line">        if (intervals==null || intervals.size()== 0) return list;</div><div class="line">        Collections.sort(intervals,new Comparator&lt;Interval&gt;()&#123;</div><div class="line">                     public int compare(Interval s1,Interval s2)&#123;</div><div class="line">                           return s1.start - s2.start;</div><div class="line">                     &#125;&#125;);</div><div class="line">        // System.out.println(intervals.toString());</div><div class="line">        int start = intervals.get(0).start;</div><div class="line">        int end = intervals.get(0).end;</div><div class="line">        for (Interval interval : intervals) &#123;</div><div class="line">            if ((interval.start) &lt;= end) &#123;</div><div class="line">                if (interval.end &gt;= end) &#123;</div><div class="line">                    end = interval.end;</div><div class="line">                &#125;</div><div class="line">            &#125; else &#123;</div><div class="line">                list.add(new Interval(start, end));</div><div class="line">                start = interval.start;</div><div class="line">                end = interval.end;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        list.add(new Interval(start, end));</div><div class="line">        return list;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a collection of intervals, merge all overlapping 
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Sort" scheme="http:starllap.space/tags/Sort/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Heap" scheme="http:starllap.space/tags/Heap/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 347. Top K Frequent Elements</title>
    <link href="http:starllap.space/2017/06/22/LeetCode-347-Top-K-Frequent-Elements/"/>
    <id>http:starllap.space/2017/06/22/LeetCode-347-Top-K-Frequent-Elements/</id>
    <published>2017-06-22T03:46:27.000Z</published>
    <updated>2017-06-22T15:48:55.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question:</h3>
<p>Given a non-empty array of integers, return the k most frequent elements.</p>
<p>For example,
Given [1,1,1,2,2,3] and k = 2, return [1,2].</p>
<p>Note:
You may assume k is always valid, 1 ≤ k ≤ number of unique elements.
Your algorithm's time complexity must be better than O(n log n), where n is the array's size.</p>
<h3 id="explanation">Explanation</h3>
<p>用了三种方法，桶排序，maxHeap以及TreeMap。主要是计算frequency，然后对frequency进行排序。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    // use hashmap &amp;&amp; array</div><div class="line">    // public List&lt;Integer&gt; topKFrequent(int[] nums, int k) &#123;</div><div class="line">    //     List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</div><div class="line">    //     Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();</div><div class="line">    //     for(int n: nums)&#123;</div><div class="line">    //         map.put(n, map.getOrDefault(n,0)+1);</div><div class="line">    //     &#125;</div><div class="line">    //     // corner case: if there is only one number in nums, we need the bucket has index 1.</div><div class="line">    //     List&lt;Integer&gt;[] bucket = new List[nums.length + 1];</div><div class="line">    //     for(int key : map.keySet()) &#123;</div><div class="line">    //         int freq = map.get(key);</div><div class="line">    //         if (bucket[freq] == null) &#123;</div><div class="line">    //             bucket[freq] = new LinkedList&lt;&gt;();</div><div class="line">    //         &#125;</div><div class="line">    //         bucket[freq].add(key);</div><div class="line">    //     &#125;</div><div class="line">    //     List&lt;Integer&gt; res = new LinkedList&lt;&gt;();</div><div class="line">    //     for(int i=bucket.length-1; i&gt;0 &amp;&amp; k &gt; 0; i--) &#123;</div><div class="line">    //         if(bucket[i]!=null) &#123;</div><div class="line">    //             result.addAll(bucket[i]);</div><div class="line">    //             k -= bucket[i].size();</div><div class="line">    //         &#125;</div><div class="line">    //     &#125;</div><div class="line">    //     return result;</div><div class="line">    // &#125;</div><div class="line"></div><div class="line">    // use maxHeap</div><div class="line">    // public List&lt;Integer&gt; topKFrequent(int[] nums, int k) &#123;</div><div class="line">    //     Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();</div><div class="line">    //     for(int n: nums)&#123;</div><div class="line">    //         map.put(n, map.getOrDefault(n,0)+1);</div><div class="line">    //     &#125;</div><div class="line">    //     PriorityQueue&lt;Map.Entry&lt;Integer, Integer&gt;&gt; maxHeap = new PriorityQueue&lt;&gt;((a,b) -&gt; (b.getValue() - a.getValue()));</div><div class="line">    //     for (Map.Entry&lt;Integer, Integer&gt; entry: map.entrySet())&#123;</div><div class="line">    //         maxHeap.add(entry);</div><div class="line">    //     &#125;</div><div class="line">    //     List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</div><div class="line">    //     while(result.size()&lt;k) &#123;</div><div class="line">    //         result.add(maxHeap.poll().getKey());</div><div class="line">    //     &#125;</div><div class="line">    //     return result.subList(0, k);</div><div class="line">    //  &#125;</div><div class="line"></div><div class="line"></div><div class="line">    // Use treeMap, use the frequency as the key so we can get all frequencies in order</div><div class="line">    public List&lt;Integer&gt; topKFrequent(int[] nums, int k) &#123;</div><div class="line">        Map&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();</div><div class="line">        for(int n: nums)&#123;</div><div class="line">            map.put(n, map.getOrDefault(n,0)+1);</div><div class="line">        &#125;</div><div class="line">        TreeMap&lt;Integer, List&lt;Integer&gt;&gt; treeMap = new TreeMap&lt;&gt;();</div><div class="line">        for(int num: map.keySet()) &#123;</div><div class="line">            int freq = map.get(num);</div><div class="line">            if(!treeMap.containsKey(freq))&#123;</div><div class="line">                treeMap.put(freq, new ArrayList&lt;&gt;());</div><div class="line">            &#125;</div><div class="line">            treeMap.get(freq).add(num);</div><div class="line">        &#125;</div><div class="line">        List&lt;Integer&gt; result = new ArrayList&lt;&gt;();</div><div class="line">        while(result.size()&lt;k) &#123;</div><div class="line">            Map.Entry&lt;Integer, List&lt;Integer&gt;&gt; entry = treeMap.pollLastEntry();</div><div class="line">            result.addAll(entry.getValue());</div><div class="line">        &#125;</div><div class="line">        return result.subList(0, k);</div><div class="line">    &#125;</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question:&lt;/h3&gt;
&lt;p&gt;Given a non-empty array of integers, return the k most
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Heap" scheme="http:starllap.space/tags/Heap/"/>
    
      <category term="HashTable" scheme="http:starllap.space/tags/HashTable/"/>
    
  </entry>
  
  <entry>
    <title>当你在浏览器中输入www.google.com会发生什么？</title>
    <link href="http:starllap.space/2017/06/22/%E5%BD%93%E4%BD%A0%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E4%B8%AD%E8%BE%93%E5%85%A5www-google-com%E4%BC%9A%E5%8F%91%E7%94%9F%E4%BB%80%E4%B9%88%EF%BC%9F/"/>
    <id>http:starllap.space/2017/06/22/当你在浏览器中输入www-google-com会发生什么？/</id>
    <published>2017-06-21T16:16:24.000Z</published>
    <updated>2017-06-22T15:50:08.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><p>经典面试题。</p>
<p>中文参考：http://www.jianshu.com/p/71cf7f69eca8
英文参考：http://edusagar.com/articles/view/70/What-happens-when-you-type-a-URL-in-browser</p>
<h3 id="step1-url-is-typed-in-the-browser">Step1. URL is typed in the browser.</h3>
<h3 id="step2-if-requested-object-is-in-browser-cache-and-is-fresh-move-on-to-step-8">Step2. If requested object is in browser cache and is fresh, move on to Step 8.</h3>
<h3 id="step3-dns-look-up-to-find-the-ip-address-of-the-server">Step3. DNS look up to find the ip address of the server.</h3>
<p>when we want to connect to google.com, we actually want to reach out to a server where google web services are hosted. One such server is having an ip address of 74.125.236.65. Now, if you type &quot;http://74.125.236.65&quot; in your browser, this will take you to google home page itself. Which means, &quot;http://google.com&quot; and &quot;http://74.125.236.65&quot; are nothing but same stuff. But, it is not so. Google has multiple servers in multiple locations to cater to the huge volume of requests they receive per second. Thus we should let Google decide which server is best suited to our needs. Using &quot;google.com&quot; does the job for us. When we type &quot;google.com&quot;, DNS(Domain Name System) services comes into play and resolves the URL to a proper ip address.</p>
<p>Following is a summary of steps happening while DNS service is at work:</p>
<ul>
<li>Check browser cache: browsers maintain cache of DNS records for some fixed duration. So, this is the first place to resolve DNS queries.</li>
<li>Check OS cache: if browser doesn't contain the record in its cache, it makes a system call to underlying Operating System to fetch the record as OS also maintains a cache of recent DNS queries.</li>
<li>Router Cache: if above steps fail to get a DNS record, the search continues to your router which has its own cache.</li>
<li>ISP cache: if everything fails, the search moves on to your ISP. First, it tries in its cache, if not found - ISP's DNS recursive search comes into picture. DNS lookup is again a complex process which finds the appropriate ip address from a list of many options available for websites like Google. You can read more about this here.</li>
</ul>
<h3 id="step-4browser-initiates-a-tcp-connection-with-the-server">Step 4.Browser initiates a TCP connection with the server.</h3>
<h3 id="step-5-browser-sends-a-http-request-to-the-server">Step 5. Browser sends a HTTP request to the server.</h3>
<p>Browser sends a GET request to the server according to the specification of HTTP(Hyper Text Transfer Protocol) protocol.</p>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">GET http://google.com/ HTTP/1.1</div><div class="line">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8</div><div class="line">User-Agent: Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:29.0) Gecko/20100101 Firefox/29.0</div><div class="line">Accept-Encoding: gzip, deflate</div><div class="line">Connection: Keep-Alive</div><div class="line">Host: google.com</div><div class="line">Cookie: datr=1265876274-[...]; locale=en_US; lsd=WW[...]; c_user=2101[...]</div></pre></td></tr></table></figure></p>
<p>Here, browser passes some meta information in the form of headers to the server along with the URL - &quot;http://google.com&quot;. User-Agent header specifies the browser properties, Accept-Encoding headers specify the type of responses it will accept.<br>
Connection header tells the server to keep open the TCP connection established here. The request also contains Cookies, which are meta information stored at the client end and contain previous browsing session information for the same website in the form of key-value pairs e.g. the login name of the user for Google.</p>
<h3 id="step-6-server-handles-the-incoming-request">Step 6. Server handles the incoming request</h3>
<p>HTTP request made from browsers are handled by a special software running on server - commonly known as web servers e.g. Apache, IIS etc. Web server passes on the request to the proper request handler - a program written to handle web services e.g. PHP, ASP.NET, Ruby, Servlets etc.</p>
<p>For example URL- http://edusagar.com/index.php is handled by a program written in PHP file - index.php. As soon as GET request for index.php is received, Apache(our webserver at edusagar.com) prepares the environment to execute index.php file. Now, this php program will generate a response - in our case a HTML response. This response is then sent back to the browser according to HTTP guidelines.</p>
<h3 id="step-7-browser-receives-the-http-response">Step 7. Browser receives the HTTP response</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">HTTP/1.1 200 OK</div><div class="line">Cache-Control: private, no-store, no-cache, must-revalidate, post-check=0, pre-check=0</div><div class="line">Expires: Thu, 19 Nov 1981 08:52:00 GMT</div><div class="line">Pragma: no-cache</div><div class="line">Content-Encoding: gzip</div><div class="line">Content-Type: text/html; charset=utf-8</div><div class="line">Connection: Keep-Alive</div><div class="line">Content-length: 1215</div><div class="line">Date: Fri, 30 May 2014 08:10:15 GMT</div></pre></td></tr></table></figure></p>
<p>HTTP response starts with the returned status code from the server. Following is a very brief summary of what a status code denotes:<br>
1xx indicates an informational message only
2xx indicates success of some kind
3xx redirects the client to another URL
4xx indicates an error on the client's part
5xx indicates an error on the server's part</p>
<h3 id="step-8-browsers-displays-the-html-content">Step 8. Browsers displays the html content</h3>
<p>Rendering of html content is also done in phases. The browser first renders the bare bone html structure, and then it sends multiple GET requests to fetch other hyper linked stuff e.g. If the html response contains an image in the form of img tags such as &lt;img src=&quot;/assets/img/logo.png&quot; /&gt;, browser will send a HTTP GET request to the server to fetch the image following the complete set of steps which we have seen till now. But this isn't that bad as it looks. Static files like images, javascript, css files are all cached by the browser so that in future it doesn't have to fetch them again.</p>
<h3 id="step-9-client-interaction-with-server">Step 9. Client interaction with server</h3>
<p>Once a html page is loaded, there are several ways a user can interact with the server. For example, he call fill out a login form to sign in to the website. This also follows all the steps listed above, the only difference is that the HTTP request this time would be a POST instead of GET and along with that request, browser will send the form data to the server for processing (username and password in this case).</p>
<p>Once server authenticates the user, it will send the proper HTML content(may be user's profile) back to the browser and thus user will see that new webpage after his login request is processed.</p>
<h3 id="step-10-ajax-queries">Step 10. AJAX queries</h3>
<p>Another form of client interaction with server is through AJAX(Asynchronous JavaScript And XML) requests. This is an asynchronous GET/POST request to which server can send a response back in a variety of ways - json, xml, html etc. AJAX requests doesn't hinder the current view of the webpage and work in the background. Because of this, one can dynamically modify the content of a webpage by calling an AJAX request and updating the web elements using Javascript.</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;p&gt;经典面试题。&lt;/p&gt;
&lt;p&gt;中文参考：http://www.jianshu.com/p/71cf7f69eca8
英文参考：http://edusagar.com/artic
    
    </summary>
    
      <category term="技术冷板凳" scheme="http:starllap.space/categories/%E6%8A%80%E6%9C%AF%E5%86%B7%E6%9D%BF%E5%87%B3/"/>
    
    
      <category term="HTTP" scheme="http:starllap.space/tags/HTTP/"/>
    
      <category term="Network" scheme="http:starllap.space/tags/Network/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 170. Two Sum III - Data Structure design</title>
    <link href="http:starllap.space/2017/06/21/LeetCode-170-Two-Sum-III-Data-Structure-design/"/>
    <id>http:starllap.space/2017/06/21/LeetCode-170-Two-Sum-III-Data-Structure-design/</id>
    <published>2017-06-21T03:23:56.000Z</published>
    <updated>2017-06-21T03:26:47.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Design and implement a TwoSum class. It should support the following operations: add and find.</p>
<p>add - Add the number to an internal data structure.
find - Find if there exists any pair of numbers which sum is equal to the value.
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">For example,</div><div class="line">add(1); add(3); add(5);</div><div class="line">find(4) -&gt; true</div><div class="line">find(7) -&gt; false</div></pre></td></tr></table></figure></p>
<h3 id="explanation">Explanation</h3>
<p>和leetcode No.1一样，只是需要考虑的这里只能用一个不太需要维护的数据结构来存储，之前排序数组的那种方法就不可行了。同时要考虑计算frequency，会出现pair中两个数字是同一个的情况。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div></pre></td><td class="code"><pre><div class="line">public class TwoSum &#123;</div><div class="line"></div><div class="line">    /** Initialize your data structure here. */</div><div class="line">    HashMap&lt;Integer, Integer&gt; map;</div><div class="line">    public TwoSum() &#123;</div><div class="line">        map = new HashMap&lt;Integer, Integer&gt;();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /** Add the number to an internal data structure.. */</div><div class="line">    public void add(int number) &#123;</div><div class="line">        if (map.containsKey(number)) &#123;</div><div class="line">            map.put(number, map.get(number)+1);</div><div class="line">        &#125; else &#123;</div><div class="line">            map.put(number, 1);</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    /** Find if there exists any pair of numbers which sum is equal to the value. */</div><div class="line">    public boolean find(int value) &#123;</div><div class="line">        for(int key:map.keySet())&#123;</div><div class="line">            int left = value - key;</div><div class="line">            if (left == key &amp;&amp; map.get(key) &gt; 1) &#123;</div><div class="line">                return true;</div><div class="line">            &#125; else if (left != key &amp;&amp; map.containsKey(left)) &#123;</div><div class="line">                return true;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return false;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Design and implement a TwoSum class. It should support 
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Easy" scheme="http:starllap.space/tags/Easy/"/>
    
      <category term="Design" scheme="http:starllap.space/tags/Design/"/>
    
      <category term="Hash Table" scheme="http:starllap.space/tags/Hash-Table/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 131.Palindrome Partitioning</title>
    <link href="http:starllap.space/2017/06/21/LeetCode-131-Palindrome-Partitioning/"/>
    <id>http:starllap.space/2017/06/21/LeetCode-131-Palindrome-Partitioning/</id>
    <published>2017-06-21T01:47:25.000Z</published>
    <updated>2017-06-22T15:51:43.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a string s, partition s such that every substring of the partition is a palindrome.</p>
<p>Return all possible palindrome partitioning of s.</p>
<p>For example, given s = &quot;aab&quot;,
Return
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">[</div><div class="line">  [&quot;aa&quot;,&quot;b&quot;],</div><div class="line">  [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]</div><div class="line">]</div></pre></td></tr></table></figure></p>
<h3 id="explanation">Explanation</h3>
<p>用回溯法找到每种可能的组合的模式，然后对于每个部分字符串去判断是否是回文字符串。算是常规题，略组合了一下，有趣。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public List&lt;List&lt;String&gt;&gt; partition(String s) &#123;</div><div class="line">        List&lt;List&lt;String&gt;&gt; result = new ArrayList&lt;&gt;();</div><div class="line">        if (s == null || s.length() == 0) return result;</div><div class="line">        List&lt;String&gt; patition = new ArrayList&lt;&gt;();</div><div class="line">        helper(s, 0, patition, result);</div><div class="line">        return result;</div><div class="line"></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    public void helper(String s, int index, List&lt;String&gt; partition, List&lt;List&lt;String&gt;&gt; result) &#123;</div><div class="line">        if (index == s.length()) &#123;</div><div class="line">            result.add(new ArrayList&lt;String&gt;(partition));</div><div class="line">        &#125;</div><div class="line">        for (int i=index; i&lt;s.length(); i++) &#123;</div><div class="line">            String subString = s.substring(index, i+1);</div><div class="line">            if (!isPalindrome(subString)) continue;</div><div class="line">            partition.add(subString);</div><div class="line">            helper(s, i+1, partition, result);</div><div class="line">            partition.remove(partition.size()-1);</div><div class="line"></div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    //check for palindrome</div><div class="line">    public boolean isPalindrome(String s) &#123;</div><div class="line">        if (s == null || s.length() == 0) return true;</div><div class="line">        int i=0; int j = s.length() -1 ;</div><div class="line">        s = s.toLowerCase();</div><div class="line">        while (i &lt; j) &#123;</div><div class="line">            if (!Character.isLetterOrDigit(s.charAt(i))) &#123;</div><div class="line">                i ++;</div><div class="line">            &#125; else if (!Character.isLetterOrDigit(s.charAt(j))) &#123;</div><div class="line">                j--;</div><div class="line">            &#125; else if (s.charAt(i)!=s.charAt(j)) &#123;</div><div class="line">                return false;</div><div class="line">            &#125; else &#123;</div><div class="line">                i++; j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a string s, partition s such that every substring
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Medium" scheme="http:starllap.space/tags/Medium/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
      <category term="Backtracking" scheme="http:starllap.space/tags/Backtracking/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 125. Valid Palindrome</title>
    <link href="http:starllap.space/2017/06/21/LeetCode-125-Valid-Palindrome/"/>
    <id>http:starllap.space/2017/06/21/LeetCode-125-Valid-Palindrome/</id>
    <published>2017-06-20T20:11:54.000Z</published>
    <updated>2017-06-20T20:36:46.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a string, determine if it is a palindrome, considering only alphanumeric characters and ignoring cases.</p>
<p>For example,
&quot;A man, a plan, a canal: Panama&quot; is a palindrome.
&quot;race a car&quot; is not a palindrome.</p>
<p>Note:
Have you consider that the string might be empty? This is a good question to ask during an interview.</p>
<p>For the purpose of this problem, we define empty string as valid palindrome.</p>
<h3 id="explanation">Explanation</h3>
<p>双指针问题。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public boolean isPalindrome(String s) &#123;</div><div class="line">        if (s == null || s.length() == 0) return true;</div><div class="line">        int i=0; int j = s.length() -1 ;</div><div class="line">        s = s.toLowerCase();</div><div class="line">        while (i &lt; j) &#123;</div><div class="line">            if (!Character.isLetterOrDigit(s.charAt(i))) &#123;</div><div class="line">                i ++;</div><div class="line">            &#125; else if (!Character.isLetterOrDigit(s.charAt(j))) &#123;</div><div class="line">                j--;</div><div class="line">            &#125; else if (s.charAt(i)!=s.charAt(j)) &#123;</div><div class="line">                return false;</div><div class="line">            &#125; else &#123;</div><div class="line">                i++; j--;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        return true;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a string, determine if it is a palindrome, consid
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Easy" scheme="http:starllap.space/tags/Easy/"/>
    
      <category term="String" scheme="http:starllap.space/tags/String/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 1. Two Sum</title>
    <link href="http:starllap.space/2017/06/20/LeetCode-1-Two-Sum/"/>
    <id>http:starllap.space/2017/06/20/LeetCode-1-Two-Sum/</id>
    <published>2017-06-20T15:19:43.000Z</published>
    <updated>2017-06-21T03:23:23.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">Given an array of integers, return indices of the two numbers such that they add up to a specific target.</div><div class="line"></div><div class="line">You may assume that each input would have exactly one solution, and you may not use the same element twice.</div><div class="line"></div><div class="line">Example:</div><div class="line">Given nums = [2, 7, 11, 15], target = 9,</div><div class="line"></div><div class="line">Because nums[0] + nums[1] = 2 + 7 = 9,</div><div class="line">return [0, 1].</div></pre></td></tr></table></figure></p>
<h3 id="explanation">Explanation</h3>
<p>基础中的基础题。如果用Hashmap存，就要用额外的空间，如果用排序和双指针来做，则需要O（nlogn）时间复杂度。</p>
<h3 id="code">Code</h3>
<p>public class Solution {
public int[] twoSum(int[] nums, int target) {
int[] result = new int[2];
HashMap&lt;Integer, Integer&gt; map = new HashMap&lt;&gt;();
for (int i= 0; i&lt; nums.length; i++) {
if (map.containsKey(nums[i])) {
result[0] = map.get(nums[i]);
result[1] = i;
break;
} else {
map.put(target - nums[i] , i);
}
}
return result;</p>
<pre><code>}
</code></pre>
<p>}</p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Easy" scheme="http:starllap.space/tags/Easy/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Hash Table" scheme="http:starllap.space/tags/Hash-Table/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 26.Remove Duplicates from Sorted Array</title>
    <link href="http:starllap.space/2017/06/18/LeetCode-26-Remove-Duplicates-from-Sorted-Array/"/>
    <id>http:starllap.space/2017/06/18/LeetCode-26-Remove-Duplicates-from-Sorted-Array/</id>
    <published>2017-06-18T08:25:52.000Z</published>
    <updated>2017-06-18T20:29:43.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</p>
<p>Do not allocate extra space for another array, you must do this in place with constant memory.</p>
<p>For example,
Given input array nums = [1,1,2],</p>
<p>Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn't matter what you leave beyond the new length.</p>
<p>Subscribe to see which companies asked this question.</p>
<h3 id="explanation">Explanation</h3>
<p>双指针问题，在原数组中去遍历。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">Given a sorted array, remove the duplicates in place such that each element appear only once and return the new length.</div><div class="line"></div><div class="line">Do not allocate extra space for another array, you must do this in place with constant memory.</div><div class="line"></div><div class="line">For example,</div><div class="line">Given input array nums = [1,1,2],</div><div class="line"></div><div class="line">Your function should return length = 2, with the first two elements of nums being 1 and 2 respectively. It doesn&apos;t matter what you leave beyond the new length.</div><div class="line"></div><div class="line">Subscribe to see which companies asked this question.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;Given a sorted array, remove the duplicates in place su
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Easy" scheme="http:starllap.space/tags/Easy/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 283.Move Zeroes</title>
    <link href="http:starllap.space/2017/06/18/LeetCode-283-Move-Zeroes/"/>
    <id>http:starllap.space/2017/06/18/LeetCode-283-Move-Zeroes/</id>
    <published>2017-06-18T08:13:56.000Z</published>
    <updated>2017-06-18T20:18:19.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="quesiton">Quesiton</h3>
<p>Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.</p>
<p>For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].</p>
<p>Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.</p>
<h3 id="explanation">Explanation</h3>
<p>双指针，遇到不是0的就去找在此之前是0的数。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public void moveZeroes(int[] nums) &#123;</div><div class="line">        int head = 0;</div><div class="line">        if (nums == null || nums.length == 0) return;</div><div class="line">        while(head &lt; nums.length) &#123;</div><div class="line">            if (nums[head] != 0) &#123;</div><div class="line">                for (int i=0; i&lt;head; i++) &#123;</div><div class="line">                    if (nums[i] == 0) &#123;</div><div class="line">                        int tmp = nums[head];</div><div class="line">                        nums[head] = 0;</div><div class="line">                        nums[i] = tmp;</div><div class="line">                        break;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">            head ++;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;quesiton&quot;&gt;Quesiton&lt;/h3&gt;
&lt;p&gt;Given an array nums, write a function to move all 0&#39;s t
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Easy" scheme="http:starllap.space/tags/Easy/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Two Pointers" scheme="http:starllap.space/tags/Two-Pointers/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode 4. Median of Two Sorted Arrays</title>
    <link href="http:starllap.space/2017/06/18/LeetCode-4-Median-of-Two-Sorted-Arrays/"/>
    <id>http:starllap.space/2017/06/18/LeetCode-4-Median-of-Two-Sorted-Arrays/</id>
    <published>2017-06-18T07:17:57.000Z</published>
    <updated>2017-06-18T19:43:23.000Z</updated>
    
    <content type="html"><![CDATA[<script src="/assets/js/DPlayer.min.js"> </script><h3 id="question">Question</h3>
<p>There are two sorted arrays nums1 and nums2 of size m and n respectively.</p>
<p>Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n)).
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Example 1:</div><div class="line">nums1 = [1, 3]</div><div class="line">nums2 = [2]</div></pre></td></tr></table></figure></p>
<p>The median is 2.0
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Example 2:</div><div class="line">nums1 = [1, 2]</div><div class="line">nums2 = [3, 4]</div></pre></td></tr></table></figure></p>
<p>The median is (2 + 3)/2 = 2.5</p>
<h3 id="explanation">Explanation</h3>
<p>既然题目要求用时间复杂度为O(log (m+n))的方法，很自然想到了二分法和分治法。中位数的表示可以用
(m + n +1)/2和(m + n + 2)/2这两个数除以2来表示。所以我们就要想办法找出两个未合并的数列中的第kth就好了。</p>
<h3 id="code">Code</h3>
<p><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line">public class Solution &#123;</div><div class="line">    public double findMedianSortedArrays(int[] nums1, int[] nums2) &#123;</div><div class="line">        int m = nums1.length; int n = nums2.length;</div><div class="line">        int left = (m + n +1)/2; int right = (m + n + 2)/2;</div><div class="line">        return (findKth(nums1, nums2, left) + findKth(nums1, nums2, right))/2.0;</div><div class="line"></div><div class="line"></div><div class="line">    public int findKth(int[] nums1, int[] nums2, int k) &#123;</div><div class="line">        int m = nums1.length, n = nums2.length;</div><div class="line">        // if m &gt;n, change two arrays</div><div class="line">        if (m &gt; n) return findKth(nums2, nums1, k);</div><div class="line">        // if any array is empty, just get the kth in second</div><div class="line">        if (m == 0) return nums2[k-1];</div><div class="line">        if (k == 1) return Math.min(nums1[0], nums2[0]);</div><div class="line"></div><div class="line">        int i = Math.min(m, k/2);</div><div class="line">        int j = Math.min(n, k/2);</div><div class="line">        if (nums1[i-1] &gt; nums2[j-1]) &#123;</div><div class="line">            return findKth(nums1, Arrays.copyOfRange(nums2, j, n), k-j);</div><div class="line">        &#125; else &#123;</div><div class="line">            return findKth(Arrays.copyOfRange(nums1, i, m), nums2, k-i);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;script src=&quot;/assets/js/DPlayer.min.js&quot;&gt; &lt;/script&gt;&lt;h3 id=&quot;question&quot;&gt;Question&lt;/h3&gt;
&lt;p&gt;There are two sorted arrays nums1 and nums2 of size m a
    
    </summary>
    
      <category term="LeetCode" scheme="http:starllap.space/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="http:starllap.space/tags/LeetCode/"/>
    
      <category term="Binary Search" scheme="http:starllap.space/tags/Binary-Search/"/>
    
      <category term="Array" scheme="http:starllap.space/tags/Array/"/>
    
      <category term="Hard" scheme="http:starllap.space/tags/Hard/"/>
    
      <category term="Divide and conquer" scheme="http:starllap.space/tags/Divide-and-conquer/"/>
    
  </entry>
  
</feed>
